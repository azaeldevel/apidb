

IF (TOOLKIT_COMMON_INCLUDE_DIR)
  SET(TOOLKIT_COMMON_FIND_QUIETLY TRUE)
ENDIF (TOOLKIT_COMMON_INCLUDE_DIR)

FIND_PATH(TOOLKIT_COMMON_INCLUDE_DIR toolkit.hpp
  /home/arm/development/toolkit/common/src
  $ENV{HOME}/root/include/toolkit
  /usr/local/include/toolkit
  /usr/include/toolkit
)

SET(TOOLKIT_COMMON_NAMES toolkit-common)
FIND_LIBRARY(TOOLKIT_COMMON_LIBRARY
  NAMES ${TOOLKIT_COMMON_NAMES}
  PATHS /home/arm/development/toolkit/common/src $ENV{HOME}/root/usr/lib /usr/lib /usr/local/lib /usr/lib/x86_64-linux-gnu
  PATH_SUFFIXES toolkit-common
)

IF (TOOLKIT_COMMON_INCLUDE_DIR AND TOOLKIT_COMMON_LIBRARY)
  SET(TOOLKIT_COMMON_FOUND TRUE)
  SET( TOOLKIT_COMMON_LIBRARIES ${TOOLKIT_COMMON_LIBRARY} )
ELSE (TOOLKIT_COMMON_INCLUDE_DIR AND TOOLKIT_COMMON_LIBRARY)
  SET(TOOLKIT_COMMON_FOUND FALSE)
  SET( TOOLKIT_COMMON_LIBRARIES )
ENDIF (TOOLKIT_COMMON_INCLUDE_DIR AND TOOLKIT_COMMON_LIBRARY)

IF (TOOLKIT_COMMON_FOUND)
  IF (NOT TOOLKIT_COMMON_FIND_QUIETLY)
    MESSAGE(STATUS "Found toolkit-common: ${TOOLKIT_COMMON_LIBRARY}")
  ENDIF (NOT TOOLKIT_COMMON_FIND_QUIETLY)
ELSE (TOOLKIT_COMMON_FOUND)
  IF (TOOLKIT_COMMON_FIND_REQUIRED)
    MESSAGE(STATUS "Looked for toolkit-common libraries named ${TOOLKIT_COMMON_NAMES}.")
    MESSAGE(FATAL_ERROR "Could NOT find toolkit-common library")
  ENDIF (TOOLKIT_COMMON_FIND_REQUIRED)
ENDIF (TOOLKIT_COMMON_FOUND)

MARK_AS_ADVANCED(
  TOOLKIT_COMMON_LIBRARY
  TOOLKIT_COMMON_INCLUDE_DIR
  )
