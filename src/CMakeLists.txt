CMAKE_MINIMUM_REQUIRED(VERSION 3.0)
PROJECT(apidb VERSION 0.15.3 LANGUAGES CXX)
SET(CMAKE_CXX_STANDARD 17)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)
SET(CMAKE_CXX_EXTENSIONS OFF)

EXECUTE_PROCESS(COMMAND date +"%Y%m%d%H%I" OUTPUT_VARIABLE apidb_VERSION_BUILD)
SET(apidb_VERSION_STAGE "snapshot")
SET(apidb_VERSION_NAME "leopard")
CONFIGURE_FILE("${PROJECT_SOURCE_DIR}/versionInfo.h.in" "${PROJECT_SOURCE_DIR}/versionInfo.h")

FIND_PACKAGE(BISON REQUIRED)
FIND_PACKAGE(FLEX REQUIRED)
FIND_PACKAGE(MySQL REQUIRED PATHS ${PROJECT_SOURCE_DIR}/../cmake/Modules/)
IF(MySQL_FOUND)
	INCLUDE_DIRECTORIES(${MYSQL_INCLUDE_DIR})
ENDIF()
FIND_PACKAGE(common-c++ REQUIRED PATHS ${PROJECT_SOURCE_DIR}/../cmake/Modules/toolkit/)
IF(TOOLKIT_COMMON_FOUND)
	INCLUDE_DIRECTORIES(${TOOLKIT_COMMON_INCLUDE_DIR})
ENDIF()
FIND_PACKAGE(mysql-c++ REQUIRED PATHS ${PROJECT_SOURCE_DIR}/../cmake/Modules/toolkit/)
IF(TOOLKIT_CLIENTDB_FOUND)
	INCLUDE_DIRECTORIES(${TOOLKIT_CLIENTDB_INCLUDE_DIR})
ENDIF()
FIND_PACKAGE( LibXml2 REQUIRED )
IF(LIBXML2_FOUND)
	INCLUDE_DIRECTORIES(${LIBXML2_INCLUDE_DIR})
ENDIF()
FIND_PACKAGE( Boost REQUIRED )
IF(Boost_FOUND)
	INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})
ENDIF()


BISON_TARGET(parser parser.yy ${PROJECT_SOURCE_DIR}/parser.tab.cc)
FLEX_TARGET(lexer lexer.l ${PROJECT_SOURCE_DIR}/lexer.yy.cc)
ADD_FLEX_BISON_DEPENDENCY(lexer parser)
SET(targetName apidbgen)
SET(SOURCES_BUILDING driver.cpp scanner.cpp apidb.cpp common-mysql.cpp analyzer.cpp generator.cpp generator-c++.cpp common.cpp ${FLEX_lexer_OUTPUTS} ${BISON_parser_OUTPUTS})



ADD_EXECUTABLE(developing  developing.cpp ${SOURCES_BUILDING})
TARGET_LINK_LIBRARIES(developing ${APIBD_GENERATORSQL_LIBRARY}  ${TOOLKIT_CLIENTDB_LIBRARIES} ${TOOLKIT_COMMON_LIBRARY} ${MYSQL_LIBRARY} ${LIBXML2_LIBRARIES} ${Boost_LIBRARIES} ${LibXML++_LIBRARIES})
ADD_CUSTOM_TARGET(developing.bin DEPENDS parser)

ADD_EXECUTABLE(apidbgen  command.cpp ${SOURCES_BUILDING})
TARGET_LINK_LIBRARIES(apidbgen ${APIBD_GENERATORSQL_LIBRARY}  ${TOOLKIT_CLIENTDB_LIBRARIES} ${TOOLKIT_COMMON_LIBRARY} ${MYSQL_LIBRARY} ${LIBXML2_LIBRARIES} ${Boost_LIBRARIES} ${LibXML++_LIBRARIES})
ADD_CUSTOM_TARGET(apidbgen.bin DEPENDS parser)

ADD_LIBRARY(apidb_obj OBJECT ${SOURCES_BUILDING})
SET_PROPERTY(TARGET apidb_obj PROPERTY POSITION_INDEPENDENT_CODE 1)

#ADD_LIBRARY(apidb_shared SHARED $<TARGET_OBJECTS:apidb_obj>)
#TARGET_LINK_LIBRARIES(apidb_shared ${TOOLKIT_COMMON_LIBRARY} ${MYSQL_LIBRARY} ${LIBXML2_LIBRARIES} ${Boost_LIBRARIES} ${LibXML++_LIBRARIES})
ADD_LIBRARY(apidb STATIC $<TARGET_OBJECTS:apidb_obj>)
TARGET_LINK_LIBRARIES(apidb ${TOOLKIT_COMMON_LIBRARY} ${MYSQL_LIBRARY} ${LIBXML2_LIBRARIES} ${Boost_LIBRARIES} ${LibXML++_LIBRARIES})
#SET_TARGET_PROPERTIES(apidb PROPERTIES OUTPUT_NAME apidb)

ADD_EXECUTABLE(Test test.cpp ${SOURCES_BUILDING})
TARGET_LINK_LIBRARIES(Test ${TOOLKIT_COMMON_LIBRARY} ${TOOLKIT_CLIENTDB_LIBRARIES} ${MYSQL_LIBRARY} ${LIBXML2_LIBRARIES} ${Boost_LIBRARIES} ${LibXML++_LIBRARIES})
target_include_directories(Test PRIVATE . ${CMAKE_CURRENT_BINARY_DIR})
SET_PROPERTY(TARGET Test PROPERTY CXX_STANDARD 14)
ADD_CUSTOM_TARGET(Test.bin DEPENDS parser)

INSTALL(TARGETS ${targetName} DESTINATION bin)
INSTALL(TARGETS apidb DESTINATION lib/apidb)
INSTALL(FILES apidb.hpp DESTINATION include/apidb)

install (TARGETS apidbgen DESTINATION bin)
include (InstallRequiredSystemLibraries)
#set (CPACK_RESOURCE_FILE_LICENSE  "${CMAKE_CURRENT_SOURCE_DIR}/License.txt")
SET (CPACK_PACKAGE_VERSION_MAJOR "${apidb_VERSION_MAJOR}")
SET (CPACK_PACKAGE_VERSION_MINOR "${apidb_VERSION_MINOR}")
INCLUDE (CPack)

