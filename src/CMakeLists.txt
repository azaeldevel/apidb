CMAKE_MINIMUM_REQUIRED(VERSION 3.0)
PROJECT(apidb VERSION 0.1.0.0 LANGUAGES CXX)
SET(CMAKE_CXX_STANDARD 14)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)
SET(CMAKE_CXX_EXTENSIONS OFF)

SET(apidb_VERSION_STAGE "alpha")
CONFIGURE_FILE("${PROJECT_SOURCE_DIR}/config.h.in" "${PROJECT_SOURCE_DIR}/config.h")


FIND_PACKAGE(MySQL REQUIRED PATHS ${PROJECT_SOURCE_DIR}/../cmake/Modules/)
IF(MySQL_FOUND)
	INCLUDE_DIRECTORIES(${MYSQL_INCLUDE_DIR})
ENDIF()
FIND_PACKAGE(toolkit-common REQUIRED PATHS ${PROJECT_SOURCE_DIR}/cmake.modules/)
IF(TOOLKIT_COMMON_FOUND)
	INCLUDE_DIRECTORIES(${TOOLKIT_COMMON_INCLUDE_DIR})
ENDIF()
FIND_PACKAGE(toolkit-clientdb REQUIRED PATHS ${PROJECT_SOURCE_DIR}/cmake.modules/)
IF(TOOLKIT_CLIENTDB_FOUND)
	INCLUDE_DIRECTORIES(${TOOLKIT_CLIENTDB_INCLUDE_DIR})
ENDIF()
#APIBD_GENERATORSQL_TARGET(apidb-generator-sql parser.yy ${PROJECT_SOURCE_DIR}/parser.tab.cc)
FIND_PACKAGE(apidb-generator-sql REQUIRED PATHS ${PROJECT_SOURCE_DIR}/cmake.modules/)
IF(APIBD_GENERATORSQL_FOUND)
	INCLUDE_DIRECTORIES(${APIBD_GENERATORSQL_INCLUDE_DIR})
ENDIF()

ADD_EXECUTABLE(developing apidb.cpp apidb-mysql.cpp testing.cpp)
TARGET_LINK_LIBRARIES(developing ${APIBD_GENERATORSQL_LIBRARY}  ${TOOLKIT_CLIENTDB_LIBRARY} ${TOOLKIT_COMMON_LIBRARY} ${MYSQL_LIBRARY})
